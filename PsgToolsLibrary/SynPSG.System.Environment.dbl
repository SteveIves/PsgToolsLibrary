;;**********************************************************************
;;
;; Title:       Environment.dbl
;;
;; Type:        Class
;;
;; Description: Provides some of the functionality of .NET's System.Environment
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;
;; Copyright    ï¿½ 2014 Synergex International Corporation.  All rights reserved.
;;
;; WARNING:     All content constituting or related to this code ("Code") is the
;;              property of Synergex International Corporation ("Synergex") and
;;              is protected by U.S. and international copyright laws.
;;              If you were given this Code by a Synergex employee then you may
;;              use and modify it freely for use within your applications.
;;
;;              However, you may use the Code only for your personal use.
;;              Any other use, unless otherwise authorized in writing by
;;              Synergex is strictly prohibited.  You may not under any
;;              circumstances distribute this Code, or any modified version
;;              or part of this Code, to any third party without first
;;              obtaining written permission to do so from Synergex.
;;              In using this Code you accept that it is provided as is,
;;              and without support or warranty of any kind.
;;
;;              Neither Synergex nor the author accept any responsibility
;;              for any losses or damages of any nature which may arise
;;              from the use of this Code.  This header information must
;;              remain unaltered in the Code at all times.  Possession
;;              of this Code, or any modified version or part of this Code,
;;              indicates your acceptance of these terms.
;;
;;***********************************************************************************

.ifndef DBLNET

import system
import synpsg.system
import synpsg

namespace SynPSG.System

	public class Environment
		
		public static property CurrentDirectory, string
			method get
			proc
				mreturn %atrim(%syn_getdir())
			endmethod
			method set
			proc
				if (%syn_setdir(value))
					nop
			endmethod
		endproperty
		
		public static method GetEnvironmentVariable, string
			required in variable, string
			endparams
			record 
				trans,	a1024
				length,	int
			endrecord
		proc
			xcall getlog(variable,trans,length)
			if (length) then
				mreturn trans(1:length)
			else
				mreturn ^null
		endmethod
		
		public static method SetEnvironmentVariable, void
			required in variable, string
			required in value, string
			endparams
			record 
				status,	int
			endrecord
		proc
			xcall setlog(variable,value,status)
		endmethod

	endclass
	
endnamespace

.endc
