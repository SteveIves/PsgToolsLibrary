;;*****************************************************************************
;;
;; Title:       RightClickToClipboard
;;
;; Type:        UI Toolkit Window Events Method
;;
;; Description: Traps right-click events on a window and, if there is a word
;;              underneath the point where the cursor was clicked, copies that
;;              word to the Windows clipboard.
;;
;; Author:	Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;; Date:        18th March 2015
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

.ifdef D_GUI

import system
import synpsg
import synpsg.windows

namespace SynPSG.Windows

    function RightClickToClipboard	,^val
	    reserved1			,a
	    reserved2			,a
	    ^val(window_id) 		,i
	    ^val(event)			,i
	    ^val(cell_col)		,i
	    ^val(cell_row)		,i
	    ^val(pixel_col)		,i
	    ^val(pixel_row)		,i
	    ^val(click_info)		,i
	endparams

	.include "WND:tools.def"
	.include "WND:windows.def"
	
	record
	    rows	,i4
	    cols	,i4
	    rowdata	,a256
	    mh	,D_ADDR
	    pos, i4
	    startPos, i4
	    endPos, int
	    clipboard, @Clipboard
       endrecord

	structure achar
		    ,a1
	endstructure
    proc
        if (click_info & D_AREA_CLIENT)
        begin
            ;;Get the dimensions of the window
            rows = %w_info(WIF_ROWS,window_id)
            cols = %w_info(WIF_COLS,window_id)

            ;;Allocate a buffer to store all the data from the window
            mh = %mem_proc(DM_ALLOC,rows*cols)

            ;;Get the data from the window
            xcall w_info(WI_XFR, window_id, WIX_DGET, ^m(mh))

            if (click_info & D_KEY_CONTROL) then 
            begin
		data tmpchn, i4, 0
                data cbdata, string, ""
		data tmpFile, string
		data ok, boolean
		xcall e_enter
                clipboard = new Clipboard()
                for pos from 1 thru rows
                begin
                    cbdata = cbdata + ^m(achar(((pos-1)*cols)+1:cols),mh)
                    if (pos<cols)
                        cbdata = cbdata + %char(13) + char(10)
                end
                clipboard.Copy(cbdata)
                clear clipboard
		;;
		tmpfile = DateTimeTools.GetTempFilePrefix() + " Screen Capture.txt"
		xcall u_open(tmpchn,"o:s",tmpfile)
		writes(tmpchn,cbdata)
		xcall u_close(tmpchn)
		try 
		begin
			lpque(tmpfile)
			ok = true
		end
		catch (ex)
		begin
			ok = false
		end
		endtry
		xcall delet(tmpfile)
		xcall e_exit
		if (ok) then 
			xcall e_sect("Screen capture sent to default printer",D_INFO,D_LEFT,D_CLEAR)
		else
			xcall e_sect("Failed to print screen capture!",D_INFO,D_LEFT,D_CLEAR)
            end
            else
            begin
                ;;Get the data for the row that was clicked
                rowdata = ^m(achar(((cell_row-1)*cols)+1:cols),mh)

                ;;Make sure there was data under the cursor (A-Z, a-z, 0-9)
                using (%decml(rowdata(cell_col:1))) select
                (48 thru 57, 65 thru 90, 97 thru 122),
                begin
                    ;;Look for the start of a word, or beginning of line
                    startPos = 1
                    endPos = cols

                    for pos from cell_col-1 thru 1 by -1
                    begin
                        using %decml(rowdata(pos:1)) select
                        (48 thru 57, 65 thru 90, 97 thru 122),
                            nop
                        (),
                        begin
                            startPos = pos+1
                            exitloop
                        end
                        endusing
                    end
                    ;;Look for the end of the word
                    for pos from cell_col+1 thru cols
                    begin
                        using %decml(rowdata(pos:1)) select
                        (48 thru 57, 65 thru 90, 97 thru 122),
                            nop
                        (),
                        begin
                            endPos = pos-1
                            exitloop
                        end
                        endusing
                    end

                    clipboard = new Clipboard()
                    clipboard.Copy(rowdata(startPos,endPos))
                    clear clipboard
                end
                endusing
            end

            mh = %mem_proc(DM_FREE,mh)

            ;TODO: Comment these two lines out if you don't want to "beep" on copy
            ;xcall w_disp(window_id,WD_BELL)
            ;xcall w_updt
        end

        freturn false

    endfunction
    
endnamespace

.endc
