;;*****************************************************************************
;;
;; File:        SynPSG.PdfText.dbl
;;
;; Title:       PdfText
;;
;; Type:       	Class
;;
;; Description: Represents an item of text to be drawn on a page of a PDF file.
;;
;; Date:        19th July 2015
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2015, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

namespace SynPSG

	public class PdfText

		public method PdfText
			required in aRow,	int
			required in aCol,	int
			required in aText,	a
			optional in aBold,	boolean
			optional in aItalic,	boolean
			optional in aColor,	PdfColor
			optional in aNewLine,	boolean
			endparams
		proc
			mRow  = aRow
			mCol  = aCol
			mText = aText
			if (^passed(aBold)) then
				mBold = aBold
			else
				mBold = false
			if (^passed(aItalic)) then
				mItalic = aItalic
			else
				mItalic = false
			if (^passed(aColor)) then
				mColor = aColor
			else
				mColor = PdfColor.Black
			if (^passed(aNewLine)) then
				mNewLine = aNewLine
			else
				mNewLine = false
		endmethod

		private mRow, int

		public property Row, int
			method get
			proc
				mreturn mRow
			endmethod
			method set
			proc
				mRow = value
			endmethod
		endproperty

		private mCol, int

		public property Col, int
			method get
			proc
				mreturn mCol
			endmethod
			method set
			proc
				mCol = value
			endmethod
		endproperty

		private mText, string

		public property Text, string
			method get
			proc
				mreturn mText
			endmethod
			method set
			proc
				mText = value
			endmethod
		endproperty

		private mBold, boolean

		public property Bold, boolean
			method get
			proc
				mreturn mBold
			endmethod
			method set
			proc
				mBold = value
			endmethod
		endproperty

		private mItalic, boolean

		public property Italic, boolean
			method get
			proc
				mreturn mItalic
			endmethod
			method set
			proc
				mItalic = value
			endmethod
		endproperty

		private mColor, PdfColor

		public property Color, PdfColor
			method get
			proc
				mreturn mColor
			endmethod
			method set
			proc
				mColor = value
			endmethod
		endproperty

		private mNewLine, boolean

		public property NewLine, boolean
			method get
			proc
				mreturn mNewLine
			endmethod
			method set
			proc
				mNewLine = value
			endmethod
		endproperty

	endclass
	
endnamespace
