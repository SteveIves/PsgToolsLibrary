;;*****************************************************************************
;;
;; Title:       FtpClientExample.dbl
;;
;; Type:        Program
;;
;; Description: An example of using FTPClient
;;
;; Date:        September 2014
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2014, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import SynPSG
import SynPSG.Windows
import SynPSG.System.Net.Sockets

main FtpClientExample

	record
		ftpClient, @FtpClient
	endrecord

	.define FILE_NAME     "bridge.jpg"
	.define NEW_FILE_NAME "bridge_new.jpg"

proc

    open(1,i,"TT:")

	xcall delet(FILE_NAME)
	
	;Create an instance of the FTP client
    ftpClient = new ftpclient("ftp.synergexpsg.com",21,FtpConnectMode.Passive)
	ftpClient.LocalDirectory = %WinTempDir

	;Connect to the remote server
	writes(1,'Connecting ...')
	if (!ftpClient.Connect("staples","p@ssw0rd")) then 
		writes(1,ftpClient.ErrorMessage)
	else
	begin
		;Receive a binary file from the server
		writes(1,"Downloading bridge.jpg from server...")
		if (!ftpClient.Download("bridge.jpg","bridge.jpg",FtpTransferType.Binary)) then 
			writes(1,ftpClient.ErrorMessage)
		else
		begin
			;Send the binary file back to the server
			writes(1,"Uploading bridge.jpg to server as bridge_new.jpg...")
			if (!ftpClient.Upload("bridge.jpg","bridge_new.jpg",FtpTransferType.Binary))
				writes(1,ftpClient.ErrorMessage)
		end

		writes(1,'Disconnecting...')
		ftpClient.Disconnect()
	end
	
endmain
